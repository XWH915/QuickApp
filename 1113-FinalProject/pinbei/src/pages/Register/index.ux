<template>
  <div class="wrapper">
    <text class="title">欢迎注册</text>
    <text class="tips">已有账号？<a id="login" onclick="login()">登录</a></text>
    <input class='input' type="text" placeholder='请输入用户名' value="{{username}}" onchange="updateUsername"></input>
    <input class='input' type="text" placeholder='请输入手机号' value="{{phone}}" onchange="updatePhone"></input>
    <input class='input' type="password" placeholder='请输入密码' value="{{password}}" onchange="updatePassword"></input>
    <div class="code-wrap">
      <input class='input code-input' type="text" placeholder='请输入验证码' value="{{code}}" onchange="updateCode"></input>
      <input if='{{!hasGetCode}}' class='code-btn' type="button" value='获取验证码' onclick="getCode()"></input>
      <input if='{{hasGetCode}}' class='code-btn1' type="button" value='已获取'></input>
    </div>
    <input class='btn' type="button" value='注册' onclick="register()"></input>
  </div>
</template>

<script>
import storage from '@system.storage'
import router from '@system.router'

export default {
  data() {
    return {
      username: '',
      phone: '',
      password: '',
      code: '',
      hasGetCode: false,
    }
  },

  onInit() { },

  onReady() { },

  onDestroy() { },

  updateUsername(e) {
    this.username = e.value;
  },

  updatePhone(e) {
    this.phone = e.value;
  },

  updatePassword(e) {
    this.password = e.value;
  },

  updateCode(e) {
    this.code = e.value;
  },

  login() {
    router.back();
  },

  getCode() {
    // 调用验证码接口（暂不实现）
    this.hasGetCode=true;
  },

  register() {
    const username = this.username;
    const phone = this.phone;
    const password = this.password;
    const code = this.code;
    const hasGetCode = this.hasGetCode;
    if(hasGetCode && code!==''){
      // 调用注册接口
      // 成功则执行以下语句
      console.log('注册成功');
      storage.set({
        key: 'phone|||password',
        value: phone+'|||'+password,
        success: function(data) {
          console.log('handling success')
        },
        fail: function(data, code) {
          console.log(`handling fail, code = ${code}`)
        }
      })
      this.login();
    }else {
      console.log('请正确输入验证码');
    }
  }
}
</script>

<style>
.wrapper {
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.title {
  color: #7adbd4;
  font-weight: 700;
  font-size: 80px;
  margin-bottom: 20px;
}
.tips {
  font-size: 30px;
  margin-bottom: 80px;
}
#login {
  color: #7adbd4;
}
.input {
  width: 60%;
  padding: 20px;
  margin-bottom: 40px;
  font-size: 34px;
  border: 1px solid #ccc;
  background-color: #f2f2f2;
}
.code-wrap {
  width: 60%;
  justify-content: space-between;
  margin-bottom: 40px;
}
.code-input {
  width: 60%;
  margin-bottom: 0;
  /* margin-right: 20px; */
}
.code-btn{
  background-color: #f2f2f2;
  font-size: 28px;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 20px;
}
.code-btn1{
  background-color: #fff;
  font-size: 28px;
  padding: 10px;
}
.btn {
  background-color: #7adbd4;
  color: #fff;
  font-size: 40px;
  padding: 20px 50px;
  border-radius: 20px;
  margin-top: 40px;
}
</style>